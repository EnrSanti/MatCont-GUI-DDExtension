function out = DDEBIFTOOL_neural
out{1} = @init;
out{2} = @fun_eval;
out{3} = [];
out{4} = [];
out{5} = [];
out{6} = [];
out{7} = [];
out{8} = [];
out{9} = [];

% --------------------------------------------------------------------------


function dydt = fun_eval (t,state,par_k,par_beta,par_a12,par_a21,par_TAUs,par_TAU1,par_TAU2)
M=15;
UnitQuadweights=UnitQuadweightsFun();
UnitNodes=UnitNodesFun();
UnitDD=UnitDDFun();
BaryWeights=BaryWeightsFun();
d1=0;
d2=2;
delayFunctions=[-par_TAU1,-par_TAU2,-par_TAUs];
tau_max=abs(min(delayFunctions));
yM=state((d1*M+1):(d1*M+d2));
VM=state((d1*M+d2+1):(d2*(M+1)));
GM = @(x) [-par_k*yM(1)+par_beta*tanh(commonFunctions.interpoly(-par_TAUs,tau_max*UnitNodes,[yM(1);VM(1:d2:end)],BaryWeights))+par_a12*tanh(commonFunctions.interpoly(-par_TAU2,tau_max*UnitNodes,[yM(2);VM(2:d2:end)],BaryWeights));
-par_k*yM(2)+par_beta*tanh(commonFunctions.interpoly(-par_TAUs,tau_max*UnitNodes,[yM(2);VM(2:d2:end)],BaryWeights))+par_a21*tanh(commonFunctions.interpoly(-par_TAU1,tau_max*UnitNodes,[yM(1);VM(1:d2:end)],BaryWeights))];
KM=[]; 
dMDM_DDE=kron(UnitDD(2:end,:),eye(d2));
dydt= [GM(KM);(1/tau_max*dMDM_DDE)*[yM;VM]];

% --------------------------------------------------------------------------

function state_eq=init(M,xeq,yeq)
state_eq=[kron(ones(M,1),xeq); kron(ones(M+1,1),yeq)];

% --------------------------------------------------------------------------
function jac = jacobian(t,kmrgd,par_k,par_beta,par_a12,par_a21,par_TAUs,par_TAU1,par_TAU2)
% --------------------------------------------------------------------------
function jacp = jacobianp(t,kmrgd,par_k,par_beta,par_a12,par_a21,par_TAUs,par_TAU1,par_TAU2)
% --------------------------------------------------------------------------
function hess = hessians(t,kmrgd,par_k,par_beta,par_a12,par_a21,par_TAUs,par_TAU1,par_TAU2)
% --------------------------------------------------------------------------
function hessp = hessiansp(t,kmrgd,par_k,par_beta,par_a12,par_a21,par_TAUs,par_TAU1,par_TAU2)
%---------------------------------------------------------------------------
function tens3  = der3(t,kmrgd,par_k,par_beta,par_a12,par_a21,par_TAUs,par_TAU1,par_TAU2)
%---------------------------------------------------------------------------
function tens4  = der4(t,kmrgd,par_k,par_beta,par_a12,par_a21,par_TAUs,par_TAU1,par_TAU2)
%---------------------------------------------------------------------------
function tens5  = der5(t,kmrgd,par_k,par_beta,par_a12,par_a21,par_TAUs,par_TAU1,par_TAU2)

function out = UnitQuadweightsFun
out=[0.0022222,0.021257,0.042769,0.06147,0.077867,0.090665,0.099607,0.10414,0.10414,0.099607,0.090665,0.077867,0.06147,0.042769,0.021257,0.0022222];
function out = UnitNodesFun
out=[0;-0.010926;-0.043227;-0.095492;-0.16543;-0.25;-0.34549;-0.44774;-0.55226;-0.65451;-0.75;-0.83457;-0.90451;-0.95677;-0.98907;-1];
function out = UnitDDFun
out=[150.3333,-183.0463,46.2671,-20.9443,12.0894,-8,5.7889,-4.4669,3.6215,-3.0557,2.6667,-2.3965,2.2111,-2.0904,2.0221,-1;45.7616,-22.628,-30.9587,11.8252,-6.4721,4.1828,-2.989,2.2893,-1.8473,1.5538,-1.353,1.2141,-1.1191,1.0573,-1.0223,0.50552;-11.5668,30.9587,-5.5221,-19.1335,8.1828,-4.8362,3.3084,-2.4721,1.9645,-1.6359,1.4149,-1.2637,1.1611,-1.0946,1.0573,-0.52259;5.2361,-11.8252,19.1335,-2.3416,-14.2973,6.4721,-4,2.8389,-2.1893,1.7889,-1.5279,1.353,-1.2361,1.1611,-1.1191,0.55279;-3.0223,6.4721,-8.1828,14.2973,-1.2116,-11.8252,5.5538,-3.5423,2.5851,-2.0447,1.7107,-1.4945,1.353,-1.2637,1.2141,-0.59911;2,-4.1828,4.8362,-6.4721,11.8252,-0.66667,-10.4721,5.0573,-3.3084,2.4721,-2,1.7107,-1.5279,1.4149,-1.353,0.66667;-1.4472,2.989,-3.3084,4,-5.5538,10.4721,-0.34164,-9.7805,4.8362,-3.2361,2.4721,-2.0447,1.7889,-1.6359,1.5538,-0.76393;1.1167,-2.2893,2.4721,-2.8389,3.5423,-5.0573,9.7805,-0.10568,-9.5668,4.8362,-3.3084,2.5851,-2.1893,1.9645,-1.8473,0.90536;-0.90536,1.8473,-1.9645,2.1893,-2.5851,3.3084,-4.8362,9.5668,0.10568,-9.7805,5.0573,-3.5423,2.8389,-2.4721,2.2893,-1.1167;0.76393,-1.5538,1.6359,-1.7889,2.0447,-2.4721,3.2361,-4.8362,9.7805,0.34164,-10.4721,5.5538,-4,3.3084,-2.989,1.4472;-0.66667,1.353,-1.4149,1.5279,-1.7107,2,-2.4721,3.3084,-5.0573,10.4721,0.66667,-11.8252,6.4721,-4.8362,4.1828,-2;0.59911,-1.2141,1.2637,-1.353,1.4945,-1.7107,2.0447,-2.5851,3.5423,-5.5538,11.8252,1.2116,-14.2973,8.1828,-6.4721,3.0223;-0.55279,1.1191,-1.1611,1.2361,-1.353,1.5279,-1.7889,2.1893,-2.8389,4,-6.4721,14.2973,2.3416,-19.1335,11.8252,-5.2361;0.52259,-1.0573,1.0946,-1.1611,1.2637,-1.4149,1.6359,-1.9645,2.4721,-3.3084,4.8362,-8.1828,19.1335,5.5221,-30.9587,11.5668;-0.50552,1.0223,-1.0573,1.1191,-1.2141,1.353,-1.5538,1.8473,-2.2893,2.989,-4.1828,6.4721,-11.8252,30.9587,22.628,-45.7616;1,-2.0221,2.0904,-2.2111,2.3965,-2.6667,3.0557,-3.6215,4.4669,-5.7889,8,-12.0894,20.9443,-46.2671,183.0463,-150.3333];
function out = BaryWeightsFun
out=[17895697.0667,-35791394.1333,35791394.1333,-35791394.1333,35791394.1333,-35791394.1333,35791394.1333,-35791394.1333,35791394.1333,-35791394.1333,35791394.1333,-35791394.1333,35791394.1333,-35791394.1333,35791394.1333,-17895697.0667];

