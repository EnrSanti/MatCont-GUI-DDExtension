function out = RE_quadratic
out{1} = @init;
out{2} = @fun_eval;
out{3} = [];
out{4} = [];
out{5} = [];
out{6} = [];
out{7} = [];
out{8} = [];
out{9} = [];

% --------------------------------------------------------------------------


function dydt = fun_eval (t,state,par_gamma)
M=20;
[thetaCap,wCap]=fclencurt(M+1,0,1);
UnitQuadweights=UnitQuadweightsFun();
UnitNodes=UnitNodesFun();
UnitDD=UnitDDFun();
BaryWeights=BaryWeightsFun();
d1=1;
d2=0;
delayFunctions=[-3,-1];
tau_max=abs(min(delayFunctions));
yM=state(1:d2);
VM=state(d2+1:(M+1)*d2);
UM=state((d2*M+d2+1):end);
derState=kron(UnitDD(2:end,2:end),eye(d1))*UM; %DM*state
dMDM_DDE=kron(UnitDD(2:end,:),eye(d2));
KM = derState - kron([par_gamma./2.*(dot(commonFunctions.interpoly(+thetaCap*(-1-(-3))+-3,tau_max*UnitNodes,[0;UM(1:d1:end)],BaryWeights).*(1-commonFunctions.interpoly(+thetaCap*(-1-(-3))+-3,tau_max*UnitNodes,[0;UM(1:d1:end)],BaryWeights)),wCap)*(-1-(-3)))],ones(M,1));
dydt= [KM];

% --------------------------------------------------------------------------
function state_eq=init(M,xeq,yeq)
state_eq=[kron(ones(M,1),xeq); kron(ones(M+1,1),yeq)];

% --------------------------------------------------------------------------
function jac = jacobian(t,kmrgd,par_gamma)
% --------------------------------------------------------------------------
function jacp = jacobianp(t,kmrgd,par_gamma)
% --------------------------------------------------------------------------
function hess = hessians(t,kmrgd,par_gamma)
% --------------------------------------------------------------------------
function hessp = hessiansp(t,kmrgd,par_gamma)
%---------------------------------------------------------------------------
function tens3  = der3(t,kmrgd,par_gamma)
%---------------------------------------------------------------------------
function tens4  = der4(t,kmrgd,par_gamma)
%---------------------------------------------------------------------------
function tens5  = der5(t,kmrgd,par_gamma)

function out = UnitQuadweightsFun
out=[0.0012531,0.011989,0.024377,0.035601,0.046199,0.055512,0.063559,0.069964,0.07471,0.07756,0.078552,0.07756,0.07471,0.069964,0.063559,0.055512,0.046199,0.035601,0.024377,0.011989,0.0012531];
function out = UnitNodesFun
out=[0;-0.0061558;-0.024472;-0.054497;-0.095492;-0.14645;-0.20611;-0.273;-0.34549;-0.42178;-0.5;-0.57822;-0.65451;-0.727;-0.79389;-0.85355;-0.90451;-0.9455;-0.97553;-0.99384;-1];
function out = UnitDDFun
out=[267,-324.8953,81.7269,-36.6994,20.9443,-13.6569,9.7037,-7.3259,5.7889,-4.7418,4,-3.4589,3.0557,-2.751,2.5192,-2.3431,2.2111,-2.1153,2.0502,-2.0124,1;81.2238,-40.3604,-54.5973,20.6864,-11.1937,7.1281,-5.0012,3.7474,-2.9469,2.406,-2.0249,1.7481,-1.5424,1.3873,-1.2695,1.1801,-1.1131,1.0646,-1.0316,1.0125,-0.5031;-20.4317,54.5973,-9.9596,-33.3056,14.0806,-8.1984,5.5055,-4.0236,3.1151,-2.5169,2.1029,-1.8059,1.5872,-1.4234,1.2997,-1.2062,1.1363,-1.0857,1.0515,-1.0316,0.51254;9.1749,-20.6864,33.3056,-4.323,-24.3934,10.8755,-6.5958,4.5765,-3.4365,2.7227,-2.2447,1.9094,-1.6666,1.487,-1.3525,1.2515,-1.1765,1.1223,-1.0857,1.0646,-0.52882;-5.2361,11.1937,-14.0806,24.3934,-2.3416,-19.6251,9.0403,-5.6334,4,-3.0647,2.4721,-2.0716,1.7889,-1.5835,1.4318,-1.3192,1.2361,-1.1765,1.1363,-1.1131,0.55279;3.4142,-7.1281,8.1984,-10.8755,19.6251,-1.4142,-16.7614,7.9015,-5.024,3.6319,-2.8284,2.316,-1.9683,1.7225,-1.5445,1.4142,-1.3192,1.2515,-1.2062,1.1801,-0.58579;-2.4259,5.0012,-5.5055,6.5958,-9.0403,16.7614,-0.89806,-14.9483,7.1744,-4.6366,3.4026,-2.6874,2.2301,-1.9198,1.7013,-1.5445,1.4318,-1.3525,1.2997,-1.2695,0.62981;1.8315,-3.7474,4.0236,-4.5765,5.6334,-7.9015,14.9483,-0.57185,-13.7956,6.7214,-4.4054,3.2764,-2.6212,2.2027,-1.9198,1.7225,-1.5835,1.487,-1.4234,1.3873,-0.68776;-1.4472,2.9469,-3.1151,3.4365,-4,5.024,-7.1744,13.7956,-0.34164,-13.1077,6.4721,-4.2969,3.2361,-2.6212,2.2301,-1.9683,1.7889,-1.6666,1.5872,-1.5424,0.76393;1.1854,-2.406,2.5169,-2.7227,3.0647,-3.6319,4.6366,-6.7214,13.1077,-0.16036,-12.7849,6.3925,-4.2969,3.2764,-2.6874,2.316,-2.0716,1.9094,-1.8059,1.7481,-0.86473;-1,2.0249,-2.1029,2.2447,-2.4721,2.8284,-3.4026,4.4054,-6.4721,12.7849,2.2649e-14,-12.7849,6.4721,-4.4054,3.4026,-2.8284,2.4721,-2.2447,2.1029,-2.0249,1;0.86473,-1.7481,1.8059,-1.9094,2.0716,-2.316,2.6874,-3.2764,4.2969,-6.3925,12.7849,0.16036,-13.1077,6.7214,-4.6366,3.6319,-3.0647,2.7227,-2.5169,2.406,-1.1854;-0.76393,1.5424,-1.5872,1.6666,-1.7889,1.9683,-2.2301,2.6212,-3.2361,4.2969,-6.4721,13.1077,0.34164,-13.7956,7.1744,-5.024,4,-3.4365,3.1151,-2.9469,1.4472;0.68776,-1.3873,1.4234,-1.487,1.5835,-1.7225,1.9198,-2.2027,2.6212,-3.2764,4.4054,-6.7214,13.7956,0.57185,-14.9483,7.9015,-5.6334,4.5765,-4.0236,3.7474,-1.8315;-0.62981,1.2695,-1.2997,1.3525,-1.4318,1.5445,-1.7013,1.9198,-2.2301,2.6874,-3.4026,4.6366,-7.1744,14.9483,0.89806,-16.7614,9.0403,-6.5958,5.5055,-5.0012,2.4259;0.58579,-1.1801,1.2062,-1.2515,1.3192,-1.4142,1.5445,-1.7225,1.9683,-2.316,2.8284,-3.6319,5.024,-7.9015,16.7614,1.4142,-19.6251,10.8755,-8.1984,7.1281,-3.4142;-0.55279,1.1131,-1.1363,1.1765,-1.2361,1.3192,-1.4318,1.5835,-1.7889,2.0716,-2.4721,3.0647,-4,5.6334,-9.0403,19.6251,2.3416,-24.3934,14.0806,-11.1937,5.2361;0.52882,-1.0646,1.0857,-1.1223,1.1765,-1.2515,1.3525,-1.487,1.6666,-1.9094,2.2447,-2.7227,3.4365,-4.5765,6.5958,-10.8755,24.3934,4.323,-33.3056,20.6864,-9.1749;-0.51254,1.0316,-1.0515,1.0857,-1.1363,1.2062,-1.2997,1.4234,-1.5872,1.8059,-2.1029,2.5169,-3.1151,4.0236,-5.5055,8.1984,-14.0806,33.3056,9.9596,-54.5973,20.4317;0.5031,-1.0125,1.0316,-1.0646,1.1131,-1.1801,1.2695,-1.3873,1.5424,-1.7481,2.0249,-2.406,2.9469,-3.7474,5.0012,-7.1281,11.1937,-20.6864,54.5973,40.3604,-81.2238;-1,2.0124,-2.0502,2.1153,-2.2111,2.3431,-2.5192,2.751,-3.0557,3.4589,-4,4.7418,-5.7889,7.3259,-9.7037,13.6569,-20.9443,36.6994,-81.7269,324.8953,-267];
function out = BaryWeightsFun
out=[13743895347.2001,-27487790694.4,27487790694.4,-27487790694.4001,27487790694.4,-27487790694.4,27487790694.4,-27487790694.4001,27487790694.4,-27487790694.4,27487790694.4001,-27487790694.4,27487790694.4,-27487790694.4,27487790694.4,-27487790694.3999,27487790694.3999,-27487790694.3999,27487790694.3999,-27487790694.4,13743895347.2];

